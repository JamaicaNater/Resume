version: '3'
services:
  mongo-db:
    image: mongo:latest
    restart: always
    env_file:
      - local.env
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.adminCommand('ping')'"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - mongodb-data:/data/db
      - ./db/init-db.js:/docker-entrypoint-initdb.d/init-db.js

  node-app:
    build:
      context: ./app
      dockerfile: app.Dockerfile
    ports:
      - 3000:3000
    env_file:
      - common.env
      - local.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./app:/app
    depends_on:
      mongo-db:
        condition: service_healthy

  react-app:
    build:
      context: ./ui
      dockerfile: ui.Dockerfile
    ports:
      - 5173:5173
    env_file:
      - common.env
      - local.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./ui:/app
    depends_on:
      node-app:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx-proxy
      dockerfile: nginx.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      node-app:
        condition: service_healthy
      react-app:
        condition: service_healthy

  redis:
    image: redis:7.0.12
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
        
volumes:
  mongodb-data:
  redis-data: